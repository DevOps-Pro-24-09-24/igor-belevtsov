apiVersion: v1
kind: ConfigMap
metadata:
  name: flask-source
  namespace: hw-13
data:
  app.py: |
    import mysql.connector
    import os
    from flask import Flask, request, jsonify
    from mysql.connector import Error

    app = Flask(__name__)

    # Database connection function
    def get_db_connection():
        try:
            connection = mysql.connector.connect(
                host=os.environ["MYSQL_HOST"],
                user=os.environ["MYSQL_USER"],
                password=os.environ["MYSQL_PASSWORD"],
                database=os.environ["MYSQL_NAME"],
            )
            return connection
        except Error as e:
            print(f"Error: {e}")
            return None


    @app.route("/")
    def home():
        return f"Welcome to the flask app server with MySQL! \n"


    @app.route("/health")
    def health():
        return jsonify(status="OK"), 200


    @app.route("/users", methods=["GET", "POST"])
    def manage_users():
        if request.method == "POST":
            data = request.json
            name = data.get("name")
            email = data.get("email")
            connection = get_db_connection()
            if connection:
                cursor = connection.cursor()
                cursor.execute(
                    "INSERT INTO users (name, email) VALUES (%s, %s)", (name, email)
                )
                connection.commit()
                connection.close()
                return jsonify({"message": "User added!"}), 201
            return jsonify({"error": "Database connection failed"}), 500

        elif request.method == "GET":
            connection = get_db_connection()
            if connection:
                cursor = connection.cursor(dictionary=True)
                cursor.execute("SELECT * FROM users")
                users = cursor.fetchall()
                connection.close()
                return jsonify(users), 200
            return jsonify({"error": "Database connection failed"}), 500


    if __name__ == "__main__":
        app.run(debug=True, host="0.0.0.0")
  Dockerfile: |
    FROM python:3.11-slim

    RUN apt update && \
        apt install -y curl && \
        apt clean

    WORKDIR /app

    ADD requirements.txt ./

    RUN pip install --no-cache-dir -r requirements.txt

    EXPOSE 5000

    HEALTHCHECK --interval=5s --timeout=5s --retries=3 CMD curl -f http://localhost:5000/health || exit 1

    ENTRYPOINT ["python", "-m", "flask", "run", "--host=0.0.0.0", "--port=5000"]
  requirements.txt: |
    flask
    mysql-connector-python
